{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","orderingGoods","map","word","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","sortByType","sortingType","isResetButton","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OACxC,6BACGA,EAAcC,KAAI,SAAAC,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDLAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAoCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAa,SAACC,GAClBF,EAAYE,IAQRC,EAAgBJ,IAAaX,EAASU,MAAQF,EAC9CN,EA3CD,SACLc,EADK,GAGM,IADTL,EACQ,EADRA,SAAUH,EACF,EADEA,WAENS,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQT,GACN,KAAKX,EAASqB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKpB,EAASuB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,KAAKxB,EAASU,KACd,QACE,OAAO,MAITF,GACFS,EAAaQ,UAGRR,EAqBeS,CACpBrB,EAAiB,CAAEG,aAAYG,aAGjC,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYlB,IAAaX,EAASqB,WAGtCS,QAAS,kBAAMjB,EAAWb,EAASqB,WARrC,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYlB,IAAaX,EAASuB,SAGtCO,QAAS,kBAAMjB,EAAWb,EAASuB,SARrC,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAarB,IAGjBsB,QAvDQ,WACdrB,GAAc,SAAAsB,GAAO,OAAKA,MA8CtB,qBAaChB,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAxDI,WACZrB,GAAc,GACdG,EAAYZ,EAASU,OAmDf,sBAUJ,cAAC,EAAD,CAAWR,cAAeA,QE/HhC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7de936d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const sortByType = (sortingType: SortType) => {\n    setSortType(sortingType);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const isResetButton = sortType !== SortType.NONE || isReversed;\n  const orderingGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => sortByType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => sortByType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList orderingGoods={orderingGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  orderingGoods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ orderingGoods }) => (\n  <ul>\n    {orderingGoods.map(word => (\n      <li\n        data-cy=\"Good\"\n        key={word}\n      >\n        {word}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}